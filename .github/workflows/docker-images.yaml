---
# yamllint disable rule:line-length
name: Build and Push Multi-Platform Docker Image

on: push

env:
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    steps:
      - id: tag_build_number
        run: echo "tag=$(echo '${{github.ref_name}}' | tr -cs 'a-zA-Z0-9' '-')$(date +'%Y%m%d%H%M%S')-${{ github.run_number }}" >> "$GITHUB_OUTPUT"
      - id: tag_snapshot
        run: echo "tag=$(echo '${{github.ref_name}}' | tr -cs 'a-zA-Z0-9' '-')snapshot" >> "$GITHUB_OUTPUT"
    outputs:
      tag_build_number: ${{ steps.tag_build_number.outputs.tag }}
      tag_snapshot: ${{ steps.tag_snapshot.outputs.tag }}
  build-and-push:
    runs-on: ubuntu-latest
    needs: prepare-variables
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and load test core-image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/netcracker/qubership/core-base:test
          file: Dockerfile.base-alpine
          platforms: linux/amd64

      - name: Build and load test java-image
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: |
            ghcr.io/netcracker/qubership/java-base:test
          file: Dockerfile.java-alpine
          platforms: linux/amd64

      - name: Prepare test resources
        run: |
          mkdir -p base-image-test-service/certs
          cd base-image-test-service/certs
          openssl genpkey -algorithm RSA -out testcert_key.pem -pkeyopt rsa_keygen_bits:2048
          openssl req -x509 -newkey rsa:2048 -keyout testcert_key.pem -out testcert.pem -days 365 -nodes -subj "/CN=testcerts.com"
          openssl req -x509 -key testcert_key.pem -out test-k8s-ca.crt -days 365 -nodes -subj "/CN=testcerts.com"
          openssl req -x509 -newkey rsa:2048 -days 365 -nodes -keyout server.key -out server.crt -subj "/CN=localhost"
          cp server.key ../core-base
          cd ../..

      - name: Build and start core-base test containers
        run: |
          docker compose -f ./base-image-test-service/core-base-docker-compose.yml up --build -d
          sleep 10
          echo "Services were started:"
          docker logs base-image-test-service-service1-1

          echo "Validate truststore"
          curl -XGET --cacert base-image-test-service/certs/server.crt --key base-image-test-service/certs/server.key -v https://localhost:8084/health
          
          echo "Test communication"
          curl http://localhost:8083/call_from_service

          echo "Validate kubernetes ca certificate"
          docker exec -it base-image-test-service-service1-1 bash -c "cat /etc/ssl/certs/ca-certificates.crt" | awk -v decoder='openssl x509 -noout -subject -enddate 2>/dev/null' '/BEGIN/{close(decoder)};{print | decoder}' | grep testcerts.com
          
          echo "Tear down containers"
          docker compose -f ./base-image-test-service/core-base-docker-compose.yml down 
          
      - name: Validate Truststore
        run: |
          docker run -v ./base-image-test-service/certs/:/tmp/cert/ -e CERTIFICATE_FILE_PASSWORD=testit --rm ghcr.io/netcracker/qubership/java-base:test \
            keytool -v -list -keystore /etc/ssl/certs/java/cacerts -storepass testit -alias testcert.pem

      - name: Validate kubernetes ca certificate
        run: |
          docker run -v ./base-image-test-service/certs/test-k8s-ca.crt:/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --rm ghcr.io/netcracker/qubership/java-base:test keytool -cacerts -storepass changeit -v -list | grep testcerts.com


      - name: Build and push java-image
        uses: docker/build-push-action@v6
        with:
          push: ${{ !startsWith(github.ref, 'refs/heads/dependabot/') }}
          tags: |
            ghcr.io/netcracker/qubership/java-base:${{ needs.prepare-variables.outputs.tag_snapshot }}
            ghcr.io/netcracker/qubership/java-base:${{ needs.prepare-variables.outputs.tag_build_number }}
          file: Dockerfile.java-alpine
          platforms: ${{ env.PLATFORMS }}

      - name: Build and push core-image
        uses: docker/build-push-action@v6
        with:
          push: ${{ !startsWith(github.ref, 'refs/heads/dependabot/') }}
          tags: |
            ghcr.io/netcracker/qubership/core-base:${{ needs.prepare-variables.outputs.tag_snapshot }}
            ghcr.io/netcracker/qubership/core-base:${{ needs.prepare-variables.outputs.tag_build_number }}
          file: Dockerfile.base-alpine
          platforms: ${{ env.PLATFORMS }}